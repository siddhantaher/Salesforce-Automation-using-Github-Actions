name: PR Validation

on:
  pull_request:
    paths:
      - 'force-app/**'

jobs:
  # 1️⃣ Check Branch Name
  branch-name-check:
    name: Assert Branch Naming Convention
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check branch name
        run: |
          echo "Branch: ${{ github.head_ref }}"
          if [[ ! "${{ github.head_ref }}" =~ ^feature\/[A-Za-z0-9._-]+$ ]]; then
            echo "Branch name does not match 'feature/*' convention"
            exit 1
          fi

  # 2️⃣ Check PR Title
  pr-title-check:
    name: Assert PR Title
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check PR title
        run: |
          echo "PR Title: ${{ github.event.pull_request.title }}"
          if [[ ! "${{ github.event.pull_request.title }}" =~ ^\[FEATURE\].* ]]; then
            echo "PR title should start with [FEATURE]"
            exit 1
          fi

  # 3️⃣ PMD Scan (only changed Apex files)
  pmd-scan:
    name: PMD Scan
    runs-on: ubuntu-latest
    needs: [branch-name-check, pr-title-check]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Get changed files
        id: diff
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep '\.cls$' || true)
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT
      - name: Run PMD
        if: steps.diff.outputs.files != ''
        run: |
          echo "Running PMD on changed Apex files..."
          FILES=$(echo "${{ steps.diff.outputs.files }}" | tr '\n' ' ')
          java -cp pmd-bin-7.17.0/lib/* net.sourceforge.pmd.PMD \
            --dir $FILES \
            --rulesets rulesets/custom-apex-rules.xml \
            --format text

  # 4️⃣ Prettier Check (only changed files)
  prettier-check:
    name: Prettier Apex Formatting
    runs-on: ubuntu-latest
    needs: [branch-name-check, pr-title-check]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install Prettier and Apex Plugin
        run: |
          npm install --save-dev prettier prettier-plugin-apex
      - name: Get changed files
        id: diff
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep '\.cls$' || true)
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT
      - name: Run Prettier
        if: steps.diff.outputs.files != ''
        run: |
          FILES=$(echo "${{ steps.diff.outputs.files }}" | tr '\n' ' ')
          echo "Checking formatting with Prettier on changed files: $FILES"
          npx prettier --plugin-search-dir=. --check $FILES
