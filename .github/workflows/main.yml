name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: 'Build and Deploy'
      run: |
        wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
        mkdir sfdx-cli
        tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
        ./sfdx-cli/install
 # Runs a set of commands using the runners shell
    - name: 'Decrypt file'
      run: openssl enc -nosalt -aes-256-cbc -d -in assets/server.key.enc -out server.key -base64 -K ${{secrets.DECRYPTION_KEY}} -iv ${{secrets.DECRYPTION_IV}}
    - name: 'Authorize'
      run: |
        echo username value ${{ secrets.USERNAME_STAGING }}
        sfdx force:auth:jwt:grant --clientid=${{ secrets.CONSUMER_KEY }} --username=${{ secrets.USERNAME }} --jwtkeyfile server.key --setdefaultdevhubusername --setalias=hub-org
    - name: 'Install npm dependencies'
      if: steps.cache-npm.outputs.cache-hit != 'true'
      run: npm ci

    # Prettier formatting
    - name: 'Code formatting verification with Prettier'
      run: npm run prettier:verify

    # Lint LWC / Aura
    - name: 'Lint Lightning Web Components / Aura Components'
      run: npm run lint

    # LWC unit tests
    - name: 'Unit test Lightning Web Components'
      run: npm run test:unit:coverage
    - name: 'Convert Metadata'
      run: sfdx force:source:convert --rootdir=force-app --outputdir=convert
    - name: 'Run Test on Metadata'
      run: sfdx force:mdapi:deploy --deploydir=convert --testlevel=RunLocalTests --checkonly -u hub-org 
    - name: 'Destructive Changes'
      run: sfdx force:source:deploy -x package.xml --predestructivechanges preDestruct.xml
